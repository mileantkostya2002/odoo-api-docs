openapi: 3.0.3
info:
  title: Expense Management API
  description: REST API for managing employee expenses and expense reports in Odoo
  version: 1.0.0
  contact:
    name: Kostya Mileant
    email: kostya.m.2002@gmail.com



  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid parameter: amount is required"

    Success:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
          example: true

    Employee:
      type: object
      properties:
        id:
          type: integer
          description: Employee ID
          example: 1
        name:
          type: string
          description: Employee name
          example: "John Doe"
        company_id:
          type: integer
          description: Company ID
          example: 1
        company_name:
          type: string
          description: Company name
          example: "Acme Corp"

    Company:
      type: object
      properties:
        id:
          type: integer
          nullable: true
          description: Company ID
          example: 1
        name:
          type: string
          nullable: true
          description: Company name
          example: "Acme Corp"

    Product:
      type: object
      properties:
        id:
          type: integer
          nullable: true
          description: Product ID
          example: 5
        name:
          type: string
          nullable: true
          description: Product name
          example: "Travel Expenses"

    Vendor:
      type: object
      nullable: true
      properties:
        id:
          type: integer
          description: Vendor ID
          example: 10
        name:
          type: string
          description: Vendor name
          example: "Hotel Chain Inc"

    Tax:
      type: object
      properties:
        id:
          type: integer
          description: Tax ID
          example: 1
        name:
          type: string
          description: Tax name
          example: "VAT 21%"
        amount:
          type: number
          format: float
          description: Tax percentage
          example: 21.0

    Attachment:
      type: object
      properties:
        id:
          type: integer
          description: Attachment ID
          example: 1
        name:
          type: string
          description: File name
          example: "receipt.jpg"
        mimetype:
          type: string
          description: File MIME type
          example: "image/jpeg"
        file_size:
          type: integer
          description: File size in bytes
          example: 524288
        create_date:
          type: string
          format: date-time
          nullable: true
          description: Creation date
          example: "2023-12-01T10:30:00"

    AttachmentWithData:
      allOf:
        - $ref: '#/components/schemas/Attachment'
        - type: object
          properties:
            data:
              type: string
              nullable: true
              description: Base64 encoded file data
              example: "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg=="

    Expense:
      type: object
      properties:
        id:
          type: integer
          description: Expense ID
          example: 1
        name:
          type: string
          description: Expense description
          example: "Business lunch"
        description:
          type: string
          description: Additional description
          example: "Meeting with client"
        total_amount_currency:
          type: number
          format: float
          description: Total amount in currency
          example: 125.50
        currency:
          type: string
          description: Currency code
          example: "EUR"
        date:
          type: string
          format: date
          nullable: true
          description: Expense date
          example: "2023-12-01"
        state:
          type: string
          description: Expense state
          enum: [draft, reported, approved, done, refused]
          example: "draft"
        state_display:
          type: string
          description: Human-readable state
          example: "Draft"
        payment_mode:
          type: string
          description: Payment mode
          enum: [own_account, company_account]
          example: "own_account"
        payment_mode_display:
          type: string
          description: Human-readable payment mode
          example: "Employee (to reimburse)"
        company:
          $ref: '#/components/schemas/Company'
        product:
          $ref: '#/components/schemas/Product'
        vendor:
          $ref: '#/components/schemas/Vendor'
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/Tax'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        attachment_count:
          type: integer
          description: Number of attachments
          example: 1
        receipt_image:
          type: integer
          nullable: true
          description: First attachment ID for backward compatibility
          example: 1
        create_date:
          type: string
          format: date-time
          nullable: true
          description: Creation date
          example: "2023-12-01T10:30:00"
        write_date:
          type: string
          format: date-time
          nullable: true
          description: Last update date
          example: "2023-12-01T15:45:00"

    ExpenseReport:
      type: object
      properties:
        id:
          type: integer
          description: Report ID
          example: 1
        name:
          type: string
          description: Report name
          example: "December 2023 Expenses"
        employee_id:
          type: integer
          nullable: true
          description: Employee ID
          example: 1
        employee_name:
          type: string
          nullable: true
          description: Employee name
          example: "John Doe"
        company_id:
          type: integer
          nullable: true
          description: Company ID
          example: 1
        company_name:
          type: string
          nullable: true
          description: Company name
          example: "Acme Corp"
        state:
          type: string
          description: Report state
          enum: [draft, submit, approve, post, done, cancel]
          example: "draft"
        state_display:
          type: string
          description: Human-readable state
          example: "Draft"
        total_amount:
          type: number
          format: float
          description: Total amount
          example: 450.75
        currency_id:
          type: integer
          nullable: true
          description: Currency ID
          example: 1
        currency_name:
          type: string
          nullable: true
          description: Currency name
          example: "EUR"
        expense_count:
          type: integer
          description: Number of expenses
          example: 3
        attachment_count:
          type: integer
          description: Number of attachments
          example: 5
        create_date:
          type: string
          format: date-time
          nullable: true
          description: Creation date
          example: "2023-12-01T10:30:00"
        approval_date:
          type: string
          format: date-time
          nullable: true
          description: Approval date
          example: "2023-12-02T14:20:00"

    Category:
      type: object
      properties:
        id:
          type: integer
          description: Category ID
          example: 1
        name:
          type: string
          description: Category name
          example: "Travel Expenses"
        default_code:
          type: string
          description: Product code
          example: "TRAVEL"
        list_price:
          type: number
          format: float
          description: Default price
          example: 0.0
        uom_name:
          type: string
          description: Unit of measure
          example: "Units"

    VendorList:
      type: object
      properties:
        id:
          type: integer
          description: Vendor ID
          example: 1
        name:
          type: string
          description: Vendor name
          example: "Hotel Chain Inc"
        email:
          type: string
          description: Vendor email
          example: "bookings@hotel.com"

    Pagination:
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of records
          example: 25
        limit:
          type: integer
          description: Records per page
          example: 20
        offset:
          type: integer
          description: Number of records skipped
          example: 0
        has_next:
          type: boolean
          description: Whether there are more records
          example: true
        has_prev:
          type: boolean
          description: Whether there are previous records
          example: false

    Filters:
      type: object
      properties:
        current_month_filter:
          type: boolean
          description: Whether current month filter is applied
          example: true
        date_from:
          type: string
          format: date
          nullable: true
          description: Start date filter
          example: "2023-12-01"
        date_to:
          type: string
          format: date
          nullable: true
          description: End date filter
          example: "2023-12-31"
        state:
          type: string
          nullable: true
          description: State filter
          example: "draft"
        search_name:
          type: string
          nullable: true
          description: Search query
          example: "lunch"
        sort_by:
          type: string
          description: Sort field
          example: "date"
        sort_order:
          type: string
          description: Sort order
          example: "desc"

paths:
  /api/v1/expenses:
    get:
      tags:
        - Expenses
      summary: Get employee expenses
      description: Retrieve list of expenses for authenticated employee. By default shows only current month expenses.
      security:
        - BearerAuth: []
      parameters:
        - name: limit
          in: query
          description: Number of records per page
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Number of records to skip
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: state
          in: query
          description: Filter by expense state
          required: false
          schema:
            type: string
            enum: [draft, reported, approved, done, refused]
        - name: date_from
          in: query
          description: Filter from date (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          description: Filter to date (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
        - name: q
          in: query
          description: Search by name or description
          required: false
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort field
          required: false
          schema:
            type: string
            enum: [date, name, amount, create_date]
            default: date
        - name: sort_order
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Expenses retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Expense'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
                      filters:
                        $ref: '#/components/schemas/Filters'
                      employee:
                        $ref: '#/components/schemas/Employee'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/expense/reports:
    get:
      tags:
        - Expense Reports
      summary: Get expense reports
      description: Retrieve list of expense reports for authenticated employee
      security:
        - BearerAuth: []
      parameters:
        - name: state
          in: query
          description: Filter by report state
          required: false
          schema:
            type: string
            enum: [draft, submit, approve, post, done, cancel]
        - name: q
          in: query
          description: Search by report name
          required: false
          schema:
            type: string
        - name: date_from
          in: query
          description: Filter from date (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          description: Filter to date (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
        - name: sort_by
          in: query
          description: Sort field
          required: false
          schema:
            type: string
            enum: [create_date, name, total_amount, approval_date]
            default: create_date
        - name: sort_order
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Expense reports retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      employee_id:
                        type: integer
                        example: 1
                      employee_name:
                        type: string
                        example: "John Doe"
                      company_id:
                        type: integer
                        example: 1
                      company_name:
                        type: string
                        example: "Acme Corp"
                      reports:
                        type: array
                        items:
                          $ref: '#/components/schemas/ExpenseReport'
                      count:
                        type: integer
                        example: 5
                      filters:
                        $ref: '#/components/schemas/Filters'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/expense/{expense_id}:
    get:
      tags:
        - Expenses
      summary: Get single expense
      description: Retrieve details of a specific expense
      security:
        - BearerAuth: []
      parameters:
        - name: expense_id
          in: path
          description: Expense ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Expense retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/Expense'
                          - type: object
                            properties:
                              employee:
                                $ref: '#/components/schemas/Employee'
                              report:
                                type: object
                                nullable: true
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  name:
                                    type: string
                                    example: "December Expenses"
                                  state:
                                    type: string
                                    example: "draft"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Expense not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Expenses
      summary: Update expense
      description: Update expense details (only in draft and reported status)
      security:
        - BearerAuth: []
      parameters:
        - name: expense_id
          in: path
          description: Expense ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Expense data to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Expense description
                  example: "Updated business lunch"
                total_amount_currency:
                  type: number
                  format: float
                  description: Total amount
                  example: 150.00
                product_id:
                  type: integer
                  description: Product/Category ID
                  example: 5
                payment_mode:
                  type: string
                  enum: [own_account, company_account]
                  example: "own_account"
                vendor_id:
                  type: integer
                  nullable: true
                  description: Vendor ID (for company_account)
                  example: 10
                date:
                  type: string
                  format: date
                  description: Expense date
                  example: "2023-12-01"
                description:
                  type: string
                  description: Additional description
                  example: "Updated meeting details"
                tax_ids:
                  type: array
                  items:
                    type: integer
                  description: List of tax IDs
                  example: [1, 2]
      responses:
        '200':
          description: Expense updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      expense_id:
                        type: integer
                        example: 1
                      message:
                        type: string
                        example: "Expense updated successfully"
                      updated_fields:
                        type: array
                        items:
                          type: string
                        example: ["name", "total_amount_currency"]
                      current_data:
                        type: object
                        description: Updated expense data
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Cannot edit expense in current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Expense not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/report/{report_id}:
    get:
      tags:
        - Expense Reports
      summary: Get single expense report
      description: Retrieve details of a specific expense report with all expenses
      security:
        - BearerAuth: []
      parameters:
        - name: report_id
          in: path
          description: Report ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Expense report retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/ExpenseReport'
                          - type: object
                            properties:
                              employee:
                                $ref: '#/components/schemas/Employee'
                              company:
                                $ref: '#/components/schemas/Company'
                              journal:
                                type: object
                                nullable: true
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  name:
                                    type: string
                                    example: "Bank Journal"
                              expenses:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Expense'
                              write_date:
                                type: string
                                format: date-time
                                nullable: true
                                example: "2023-12-01T15:45:00"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Expense report not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/expense/{expense_id}/attachments:
    get:
      tags:
        - Attachments
      summary: Get expense attachments
      description: Get list of attachments for expense (without binary data for performance)
      security:
        - BearerAuth: []
      parameters:
        - name: expense_id
          in: path
          description: Expense ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attachments retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      expense_id:
                        type: integer
                        example: 1
                      attachments:
                        type: array
                        items:
                          $ref: '#/components/schemas/Attachment'
                      attachment_count:
                        type: integer
                        example: 2
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Expense not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/expense/{expense_id}/attachment/{attachment_id}:
    get:
      tags:
        - Attachments
      summary: Get attachment data
      description: Get attachment binary data by ID
      security:
        - BearerAuth: []
      parameters:
        - name: expense_id
          in: path
          description: Expense ID
          required: true
          schema:
            type: integer
        - name: attachment_id
          in: path
          description: Attachment ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attachment data retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      attachment_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "receipt.jpg"
                      mimetype:
                        type: string
                        example: "image/jpeg"
                      file_size:
                        type: integer
                        example: 524288
                      data:
                        type: string
                        nullable: true
                        description: Base64 encoded file data
                      create_date:
                        type: string
                        format: date-time
                        nullable: true
                        example: "2023-12-01T10:30:00"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Attachment does not belong to this expense
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Expense or attachment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Attachments
      summary: Update attachment
      description: Update attachment file data or name (only for draft/reported expenses)
      security:
        - BearerAuth: []
      parameters:
        - name: expense_id
          in: path
          description: Expense ID
          required: true
          schema:
            type: integer
        - name: attachment_id
          in: path
          description: Attachment ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Attachment data to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_data:
                  type: string
                  description: Base64 encoded file data
                  example: "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg=="
                file_name:
                  type: string
                  description: New file name
                  example: "updated_receipt.jpg"
      responses:
        '200':
          description: Attachment updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      attachment_id:
                        type: integer
                        example: 1
                      message:
                        type: string
                        example: "Attachment updated successfully"
                      updated_fields:
                        type: array
                        items:
                          type: string
                        example: ["datas", "name"]
                      expense_id:
                        type: integer
                        example: 1
                      expense_state:
                        type: string
                        example: "draft"
                      current_data:
                        $ref: '#/components/schemas/Attachment'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Cannot update attachment for expense in current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Expense or attachment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Attachments
      summary: Delete attachment
      description: Delete attachment (only for draft/reported expenses)
      security:
        - BearerAuth: []
      parameters:
        - name: expense_id
          in: path
          description: Expense ID
          required: true
          schema:
            type: integer
        - name: attachment_id
          in: path
          description: Attachment ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attachment deleted successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Attachment deleted successfully"
                      deleted_attachment:
                        $ref: '#/components/schemas/Attachment'
                      expense_id:
                        type: integer
                        example: 1
                      expense_state:
                        type: string
                        example: "draft"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Cannot delete attachment from expense in current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Expense or attachment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/expense/categories:
    get:
      tags:
        - Reference Data
      summary: Get expense categories
      description: Get list of expense categories (public endpoint)
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      categories:
                        type: array
                        items:
                          $ref: '#/components/schemas/Category'
                      count:
                        type: integer
                        example: 10
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/expense/vendors:
    get:
      tags:
        - Reference Data
      summary: Get vendors
      description: Get list of vendors for company_account payment mode (public endpoint)
      responses:
        '200':
          description: Vendors retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      vendors:
                        type: array
                        items:
                          $ref: '#/components/schemas/VendorList'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/expense:
    post:
      tags:
        - Expenses
      summary: Create expense
      description: Create new expense for authenticated employee
      security:
        - BearerAuth: []
      requestBody:
        description: Expense data to create
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - total_amount_currency
                - product_id
              properties:
                name:
                  type: string
                  description: Expense description
                  example: "Business lunch with client"
                total_amount_currency:
                  type: number
                  format: float
                  description: Total amount
                  example: 125.50
                product_id:
                  type: integer
                  description: Product/Category ID
                  example: 5
                payment_mode:
                  type: string
                  enum: [own_account, company_account]
                  default: own_account
                  example: "own_account"
                vendor_id:
                  type: integer
                  nullable: true
                  description: Vendor ID (required for company_account)
                  example: 10
                date:
                  type: string
                  format: date
                  description: Expense date
                  example: "2023-12-01"
                description:
                  type: string
                  description: Additional description
                  example: "Meeting with potential client"
                tax_ids:
                  type: array
                  items:
                    type: integer
                  description: List of tax IDs
                  example: [1, 2]
      responses:
        '201':
          description: Expense created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      expense_id:
                        type: integer
                        example: 1
                      employee_id:
                        type: integer
                        example: 1
                      employee_name:
                        type: string
                        example: "John Doe"
                      company_id:
                        type: integer
                        example: 1
                      company_name:
                        type: string
                        example: "Acme Corp"
                      message:
                        type: string
                        example: "Expense created successfully"
                      state:
                        type: string
                        example: "draft"
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/expense/create-report:
    post:
      tags:
        - Expense Reports
      summary: Create expense report
      description: Create expense report with multiple expenses for authenticated employee
      security:
        - BearerAuth: []
      requestBody:
        description: Expense report data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - expense_ids
              properties:
                expense_ids:
                  type: array
                  items:
                    type: integer
                  description: List of expense IDs to include in report
                  example: [1, 2, 3]
                  minItems: 1
                name:
                  type: string
                  description: Report name
                  example: "December 2023 Business Expenses"
                journal_id:
                  type: integer
                  description: Journal ID
                  example: 1
      responses:
        '201':
          description: Expense report created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      report_id:
                        type: integer
                        example: 1
                      report_name:
                        type: string
                        example: "December 2023 Business Expenses"
                      employee_id:
                        type: integer
                        example: 1
                      employee_name:
                        type: string
                        example: "John Doe"
                      company_id:
                        type: integer
                        example: 1
                      company_name:
                        type: string
                        example: "Acme Corp"
                      total_amount:
                        type: number
                        format: float
                        example: 375.50
                      expense_count:
                        type: integer
                        example: 3
                      state:
                        type: string
                        example: "draft"
                      expenses_updated:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            state:
                              type: string
                              example: "reported"
                      message:
                        type: string
                        example: "Expense report created successfully"
        '400':
          description: Bad request - validation error or invalid expenses
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Error'
                  - type: object
                    properties:
                      error:
                        type: string
                        example: "Some expenses are already included in other reports"
                      expenses_in_reports:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            sheet_id:
                              type: integer
                            sheet_name:
                              type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/report/{report_id}/submit:
    post:
      tags:
        - Expense Reports
      summary: Submit expense report
      description: Submit expense report for approval (only for report owner)
      security:
        - BearerAuth: []
      parameters:
        - name: report_id
          in: path
          description: Report ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Expense report submitted successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      report_id:
                        type: integer
                        example: 1
                      message:
                        type: string
                        example: "Expense report submitted successfully"
                      new_state:
                        type: string
                        example: "submit"
                      total_amount:
                        type: number
                        format: float
                        example: 375.50
                      expense_count:
                        type: integer
                        example: 3
        '400':
          description: Bad request - cannot submit report in current state
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Cannot submit report in state "approved". Only draft reports can be submitted.'
                  current_state:
                    type: string
                    example: "approved"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Expense report not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/expense/{expense_id}/delete:
    delete:
      tags:
        - Expenses
      summary: Delete expense
      description: Delete expense (only in draft and reported status)
      security:
        - BearerAuth: []
      parameters:
        - name: expense_id
          in: path
          description: Expense ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Expense deleted successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Expense deleted successfully"
                      deleted_expense:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: "Business lunch"
                          total_amount_currency:
                            type: number
                            format: float
                            example: 125.50
                          state:
                            type: string
                            example: "draft"
                      attachments_deleted:
                        type: integer
                        description: Number of attachments deleted
                        example: 2
                      affected_reports:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: "December Expenses"
                            state:
                              type: string
                              example: "draft"
                            expenses_before:
                              type: integer
                              example: 3
                            expenses_after:
                              type: integer
                              example: 2
                            action_taken:
                              type: string
                              enum: [removed_from_report, report_deleted_as_empty, removed_from_report_but_report_not_deleted]
                              example: "removed_from_report"
                            warning:
                              type: string
                              description: Warning message if applicable
                      affected_reports_count:
                        type: integer
                        example: 1
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Cannot delete expense in current state
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Cannot delete expense in state "approved".'
                  current_state:
                    type: string
                    example: "approved"
                  allowed_states:
                    type: array
                    items:
                      type: string
                    example: ["draft", "reported"]
        '404':
          description: Expense not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
